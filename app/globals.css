@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 0 0% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 0 0% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 3.9%;
    --primary: 0 0% 9%;
    --primary-foreground: 0 0% 98%;
    --secondary: 0 0% 96.1%;
    --secondary-foreground: 0 0% 9%;
    --muted: 0 0% 96.1%;
    --muted-foreground: 0 0% 45.1%;
    --accent: 0 0% 96.1%;
    --accent-foreground: 0 0% 9%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 89.8%;
    --input: 0 0% 89.8%;
    --ring: 0 0% 3.9%;
    --radius: 0.5rem;
  }

  .dark {
    --background: 0 0% 3.9%;
    --foreground: 0 0% 98%;
    --card: 0 0% 3.9%;
    --card-foreground: 0 0% 98%;
    --popover: 0 0% 3.9%;
    --popover-foreground: 0 0% 98%;
    --primary: 0 0% 98%;
    --primary-foreground: 0 0% 9%;
    --secondary: 0 0% 14.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 0 0% 14.9%;
    --muted-foreground: 0 0% 63.9%;
    --accent: 0 0% 14.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 14.9%;
    --input: 0 0% 14.9%;
    --ring: 0 0% 83.1%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

/* Enhanced scrollbar */
::-webkit-scrollbar {
  width: 10px;
}

::-webkit-scrollbar-track {
  background: #0a0a0a;
  border-radius: 5px;
}

::-webkit-scrollbar-thumb {
  background: linear-gradient(to bottom, #06b6d4, #3b82f6);
  border-radius: 5px;
  border: 2px solid #0a0a0a;
}

::-webkit-scrollbar-thumb:hover {
  background: linear-gradient(to bottom, #0891b2, #2563eb);
}

/* Enhanced glow effects */
.glow-cyan {
  box-shadow: 0 0 30px rgba(6, 182, 212, 0.4), 0 0 60px rgba(6, 182, 212, 0.2);
}

.glow-blue {
  box-shadow: 0 0 30px rgba(59, 130, 246, 0.4), 0 0 60px rgba(59, 130, 246, 0.2);
}

/* Text clamp utilities */
.line-clamp-1 {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
}

.line-clamp-2 {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
}

/* Enhanced animation keyframes */
@keyframes float {
  0%,
  100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-15px);
  }
}

.float {
  animation: float 4s ease-in-out infinite;
}

@keyframes pulse-glow {
  0%,
  100% {
    box-shadow: 0 0 20px rgba(6, 182, 212, 0.3);
  }
  50% {
    box-shadow: 0 0 40px rgba(6, 182, 212, 0.7), 0 0 60px rgba(6, 182, 212, 0.4);
  }
}

.pulse-glow {
  animation: pulse-glow 3s ease-in-out infinite;
}

@keyframes shimmer {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

.shimmer {
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
  background-size: 200% 100%;
  animation: shimmer 2s infinite;
}

/* Responsive container */
@media (min-width: 1400px) {
  .max-w-\[1400px\] {
    max-width: 1400px;
  }
}

/* Enhanced card hover effects */
.card-hover {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.card-hover:hover {
  transform: translateY(-8px) scale(1.02);
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3), 0 0 30px rgba(6, 182, 212, 0.2);
}
/* In app/globals.css */

@property --angle {
  syntax: '<angle>';
  initial-value: 0deg;
  inherits: false;
}

@keyframes rotate {
  to {
    --angle: 360deg;
  }
}

.glowing-border {
  position: relative;
  border-width: 2px;
  border-style: solid;
  border-image: conic-gradient(from var(--angle), transparent 0%, theme('colors.cyan.500') 20%, transparent 40%) 1;
  animation: rotate 4s linear infinite;
  animation-play-state: paused;
}

.glowing-border:hover {
  animation-play-state: running;
}

/* In app/globals.css */

/* --- FUTURISTIC BACKGROUND STYLES --- */

/* Layer 1: Aurora Effect */
@keyframes aurora-animation {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}
.aurora-bg {
  position: absolute;
  inset: 0;
  background: radial-gradient(ellipse at 20% 80%, rgba(22, 163, 74, 0.3), transparent 50%),
              radial-gradient(ellipse at 80% 30%, rgba(56, 189, 248, 0.3), transparent 50%);
  background-size: 200% 200%;
  animation: aurora-animation 20s ease-in-out infinite;
  opacity: 0.5;
}

/* Layer 2: Pulsing Grid */
@keyframes pulse-grid {
  0%, 100% { opacity: 0; }
  50% { opacity: 0.2; }
}
.grid-bg {
  position: absolute;
  inset: 0;
  background-image:
    linear-gradient(to right, theme('colors.cyan.500') 1px, transparent 1px),
    linear-gradient(to bottom, theme('colors.cyan.500') 1px, transparent 1px);
  background-size: 50px 50px;
  animation: pulse-grid 15s ease-in-out infinite;
}

/* Layer 3: Constellations */
@keyframes twinkle {
  0%, 100% { opacity: 0; }
  50% { opacity: 0.8; }
}
@keyframes fade-in-out {
  0%, 100% { opacity: 0; }
  50% { opacity: 0.2; }
}

.star {
  fill: white;
  animation: twinkle 5s ease-in-out infinite;
  animation-delay: var(--delay);
}

.constellation-line {
  stroke: theme('colors.cyan.500');
  stroke-width: 0.5px;
  animation: fade-in-out 10s ease-in-out infinite;
  animation-delay: var(--delay);
}

/* In app/globals.css */

/* ... (your other styles) */

/* Base class for the effect, animation is paused by default */
.glowing-border {
  position: relative;
  border-width: 2px;
  border-style: solid;
  border-image: conic-gradient(from var(--angle), transparent 0%, theme('colors.cyan.500') 20%, transparent 40%) 1;
  animation: rotate 4s linear infinite;
  animation-play-state: paused;
}

/* Activates on hover */
.glowing-border:hover {
  animation-play-state: running;
}

/* --- ADD THIS NEW CLASS --- */
/* A modifier class to make the animation ALWAYS run */
.glowing-border-active {
  animation-play-state: running;
}

/* In app/globals.css */

/* ... (your existing blue glowing border styles) */
.glowing-border {
  position: relative;
  border-width: 2px;
  border-style: solid;
  border-image: conic-gradient(from var(--angle), transparent 0%, theme('colors.cyan.500') 20%, transparent 40%) 1;
  animation: rotate 4s linear infinite;
  animation-play-state: paused;
}
.glowing-border:hover {
  animation-play-state: running;
}
.glowing-border-active {
  animation-play-state: running;
}

/* --- ADD THIS NEW BLOCK FOR THE GREEN THEME --- */
.glowing-border-green {
  position: relative;
  border-width: 2px;
  border-style: solid;
  /* This line is changed to use green and teal */
  border-image: conic-gradient(from var(--angle), transparent 0%, theme('colors.green.400') 20%, theme('colors.teal.500') 60%, transparent 80%) 1;
  animation: rotate 4s linear infinite;
  animation-play-state: paused;
}
.glowing-border-green:hover {
  animation-play-state: running;
}
.glowing-border-green-active {
  animation-play-state: running;
}
/* In app/globals.css */
/* ... your existing glowing border styles ... */

/* --- ADD THIS NEW BLOCK FOR THE RED THEME --- */
.glowing-border-red {
  position: relative;
  border-width: 2px;
  border-style: solid;
  border-image: conic-gradient(from var(--angle), transparent 0%, theme('colors.red.500') 20%, theme('colors.orange.500') 60%, transparent 80%) 1;
  animation: rotate 4s linear infinite;
  animation-play-state: paused;
}
.glowing-border-red:hover {
  animation-play-state: running;
}
.glowing-border-red-active {
  animation-play-state: running;
}

/* Style the checkbox itself */
[data-state="checked"] {
  /* When checked, give it a red background to match the theme */
  background-color: theme('colors.red.500');
  border-color: theme('colors.red.400');
}

/* Style the checkmark icon inside the checkbox */
[data-state="checked"] > svg {
  /* Make the checkmark icon white so it's visible */
  color: white;
}

/* In app/globals.css -- ADD THIS ENTIRE BLOCK TO THE BOTTOM OF THE FILE */

/* --- FIX FOR CHECKBOX VISIBILITY ON DARK THEME --- */

/* Ensures the checkbox has a visible border when UNCHECKED */
[role="checkbox"][data-state="unchecked"] {
  border-color: theme('colors.gray.600') !important;
  background-color: transparent !important;
}

/* Ensures the CHECKED state uses the correct theme colors */
[role="checkbox"][data-state="checked"] {
  background-color: theme('colors.red.500') !important;
  border-color: theme('colors.red.400') !important;
}

/* Ensures the checkmark icon inside is white and visible */
[role="checkbox"][data-state="checked"] > svg {
  color: white !important;
}